class Solution {
public:
    int solve(int low,int mid,int high,vector<int>&num){
        int left=low,right=mid+1,ans=0;
        while(left<=mid and right<=high){
            if(num[left]>((long long)2*num[right])){
                ans+=mid-left+1;
                right++;
            }else{
                left++;
            }
        }
        sort(num.begin()+low,num.begin()+high+1);
        return ans;
    }
    int merge(int low,int high,vector<int>&nums){
        int cnt=0;
        if(low>=high){
            return 0;
        }else{
            int mid=(low+high)/2;
            cnt+=merge(low,mid,nums);
            cnt+=merge(mid+1,high,nums);
            cnt+=solve(low,mid,high,nums);

        }
        return cnt;
    }
    int reversePairs(vector<int>& nums) {
        return merge(0,nums.size()-1,nums);
    }
};
