class Solution {
public:
    int solve(int ind,bool buy,vector<int>&prices,vector<vector<int>>&dp,int cnt){
        if(ind>=prices.size()) return 0;
        if(dp[ind][buy]!=-1) return dp[ind][buy];
        if(cnt==0) return 0;
        if(buy){
            int take=-prices[ind]+solve(ind+1,0,prices,dp,cnt);
            int notTake=solve(ind+1,1,prices,dp,cnt);
            return dp[ind][buy]=max(take,notTake);
        }else{
            int take=prices[ind]+solve(ind+1,1,prices,dp,cnt-1);
            int notTake=solve(ind+1,0,prices,dp,cnt);
            return dp[ind][buy]= max(take,notTake);
        }

    }
    int maxProfit(vector<int>& prices) {
        vector<vector<int>>dp(prices.size()+1,vector<int>(2,-1));
        return solve(0,1,prices,dp,1);
    }
};
