class Solution {
public:
    int solve(int i,vector<vector<int>>&inter,int k,map<pair<int,int>,int>&dp){
        if(i>=inter.size()) return 0;
        int take=0,notTake=0;
        if(dp.find({i,k})!=dp.end()) return dp[{i,k}];
        if(inter[i][0]>=k){
            take=1+solve(i+1,inter,inter[i][1],dp);
            
        }
        notTake+=solve(i+1,inter,k,dp);
        return dp[{i,k}]=max(take,notTake);
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),[](auto a,auto b){
            return a[1]<b[1];
        });
        int prev = 0,n=intervals.size();
        int count = 1;
        for(int i = 1; i<n; i++){
            if(intervals[i][0] >= intervals[prev][1]){
                prev = i;
                count++;
            }
        }
        return n-count;
    }
};
