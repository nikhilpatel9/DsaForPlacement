class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool cycle(vector<int>&visited,vector<int>adj[],int i, vector<int>&visit){
        visited[i]=1;
        visit[i]=1;
        for(auto e:adj[i]){
            if(!visited[e]){
               if(cycle(visited,adj,e,visit)==true) return true;
            }else if(visit[e]){
                return true;
            }
        }
        visit[i]=0;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int>visited(V,0);
        vector<int>visit(V,0);
        for(int i=0;i<V;i++){
            if(!visited[i]){
                if(cycle(visited,adj,i,visit)==true) return true;
            }
        }
        return false;
    }
};
