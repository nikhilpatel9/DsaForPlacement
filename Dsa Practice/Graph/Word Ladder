class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        set<string>st;
        for(int i=0;i<wordList.size();i++){
            st.insert(wordList[i]);
        }
        queue<pair<int,string>>q;
        int mx=INT_MAX;
        q.push({1,beginWord});
        while(!q.empty()){
            int k=q.front().first;
            string s=q.front().second;
            q.pop();
            if(s==endWord){
                mx=min(mx,k);
            }
            string p=s;
            for(int i=0;i<s.length();i++){
                for(char c='a';c<='z';c++){
                    s[i]=c;
                    if(st.find(s)!=st.end()){
                        q.push({k+1,s});
                        st.erase(s);
                        cout<<s<<" ";
                    }
                }
                s[i]=p[i];
            }
        }
        return mx==INT_MAX ? 0:mx;
    }
};
