class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>>dp(n,vector<int>(n,INT_MAX));
        for(int i=0;i<edges.size();i++){
            dp[edges[i][0]][edges[i][1]]=edges[i][2];
            dp[edges[i][1]][edges[i][0]]=edges[i][2];
        }
        for(int i=0;i<n;i++){
            dp[i][i]=0;
        }
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(dp[i][k]==INT_MAX or dp[k][j]==INT_MAX) continue;
                    else{
                        dp[i][j]=min(dp[i][j],dp[i][k]+dp[k][j]);
                    }
                }
            }
        }
        int ans=n;
        int res=-1;
        for(int i=0;i<n;i++){
            int cnt=0;
            for(int j=0;j<n;j++){
                if(dp[i][j]<=distanceThreshold){
                    cnt++;
                }
            }
            if(cnt<=ans){
                ans=cnt;
                res=i;
            }
        }
        return res;
    }
};
