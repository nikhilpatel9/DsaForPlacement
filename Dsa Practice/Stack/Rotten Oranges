class Solution 
{
    public:
    //Function to find minimum time required to rot all oranges. 
    int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<pair<int,int>,int>>q;
        int cnt=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                  q.push({{i,j},0});
                }else if(grid[i][j]==1)
                {
                    cnt++;
                }
            }
        }
        int res=0;
        while(!q.empty())
        {
            int row[]={-1,0,1,0};
            int col[]={0,1,0,-1};
            int f=q.front().first.first;
            int s=q.front().first.second;
            int d=q.front().second;
            res=max(res,d);
            q.pop();
            for(int i=0;i<4;i++)
            {
                int r=f+row[i];
                int c=s+col[i];
                if(r<n&&r>=0&&c>=0&&c<m)
                {
                    if(grid[r][c]==1)
                    {
                        grid[r][c]=2;
                        cnt--;
                        q.push({{r,c},d+1});
                    }
                }
            }
            
        }
        if(cnt>0) return -1;
        return res;
    }
};
