class Solution {
public:
    int solve(vector<int>&nums,int amount,int i,vector<vector<int>>&dp){
        if(i>=nums.size() or amount<0) return INT_MAX-1;
        if(amount==0) return 0;
        if(dp[i][amount]!=-1) return dp[i][amount];
        int take=INT_MAX,notTake=INT_MAX;
        take=1+solve(nums,amount-nums[i],i,dp);
        notTake=solve(nums,amount,i+1,dp);
        return dp[i][amount]=min(take,notTake);
    }
    int coinChange(vector<int>& coins, int amount) {
        sort(coins.rbegin(),coins.rend());
        vector<vector<int>>dp(13,vector<int>(amount+1,-1));
        int k=solve(coins,amount,0,dp);
        if(k==INT_MAX-1) return -1;
        return k;
    }
};
