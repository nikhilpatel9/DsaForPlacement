/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int f=0;
        int s=0;
        ListNode *p=headA;
        ListNode *p1=headB;
        while(p)
        {
            f++;
            p=p->next;
        }
        while(p1)
        {
            s++;
            p1=p1->next;
        }
        if(f>=s)
        {
            int t=f-s;
            int q=0;
            while(t--){
            if(headA==nullptr) return nullptr;
                headA=headA->next;
            }
            while(headA&&headB)
            {
                 if(headA==headB) return headA;
                headA=headA->next;
                headB=headB->next;
            }
        }else
        {
            int t=s-f;
            int q=0;
            while(t--)
            {
                if(headB==nullptr) return nullptr;
                headB=headB->next;
            } 
            while(headA&&headB)
            {
                 if(headA==headB) return headA;
                headA=headA->next;
                headB=headB->next;
            }
        }
 return nullptr;
    }
};
