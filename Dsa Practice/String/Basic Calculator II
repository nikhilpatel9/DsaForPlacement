class Solution {
public:
    int calculate(string s) {
        stack<int>st;
        string str;

        for(int i=0;i<s.length();i++){
            str+=s[i];
            if(s[i]=='+'){
                str.pop_back();
                if(st.size()>0 and st.top()<=-3){
                    int k=st.top();
                    st.pop();
                    int n=st.top();
                    st.pop();
                    if(k==-3){
                        n*=stoi(str);
                        st.push(n);
                    }else{
                        n/=stoi(str);
                        st.push(n);
                    }
                }else{
                    int t=1;
                   if(st.size()>1 and st.top()==-2){
                    t=-1;
                   }
                   st.push(stoi(str)*t);
                }
                str="";
                st.push(-1);
            }
             if(s[i]=='-'){
                str.pop_back();
                 if(st.size()>0 and st.top()<=-3){
                    int k=st.top();
                    st.pop();
                    int n=st.top();
                    st.pop();
                    if(k==-3){
                        n*=stoi(str);
                        st.push(n);
                    }else{
                        n/=stoi(str);
                        st.push(n);
                    }
                }else{
                    int t=1;
                    if(st.size()>1 and st.top()==-2){
                    t=-1;
                   }
                st.push(stoi(str)*t);
                }
                str="";
                st.push(-2);
            }
             if(s[i]=='*'){
                str.pop_back();
                if(st.size()>0 and st.top()<=-3){
                    int k=st.top();
                    st.pop();
                    int n=st.top();
                    st.pop();
                    if(k==-3){
                        n*=stoi(str);
                        st.push(n);
                    }else{
                        n/=stoi(str);
                        st.push(n);
                    }
                }else{
                    int t=1;
                if(st.size()>1 and st.top()==-2){
                    t=-1;
                   }
                st.push(stoi(str)*t);
                }
                str="";
                st.push(-3);
            }
            if(s[i]=='/'){
                str.pop_back();
                if(st.size()>0 and st.top()<=-3){
                    int k=st.top();
                    st.pop();
                    int n=st.top();
                    st.pop();
                    if(k==-3){
                        n*=stoi(str);
                        st.push(n);
                    }else{
                        n/=stoi(str);
                        st.push(n);
                    }
                }else{
                    int t=1;
                    if(st.size()>1 and st.top()==-2){
                    t=-1;
                   }
                st.push(stoi(str)*t);
                }
                str="";
                st.push(-4);
            }
        }
         if(str.length()>0){
                if(st.size()>0 and st.top()<=-3){
                    int k=st.top();
                    st.pop();
                    int n=st.top();
                    st.pop();
                    if(k==-3){
                        n*=stoi(str);
                        st.push(n);
                    }else{
                        n/=stoi(str);
                        st.push(n);
                    }
                }else{
                     int t=1;
                    if(st.size()>1 and st.top()==-2){
                    t=-1;
                   }
                st.push(stoi(str)*t);
                }
               // str="";
                //st.push(-3);
            
        }
        while(st.size()>1){
              int l=st.top();
               st.pop();
               int k=st.top();
               cout<<k<<" "<<l;
                st.pop();
                int n=st.top();
                st.pop();
                if(k==-1){
                    n+=l;
                    st.push(n);
                }else{
                    n+=l;
                    st.push(n);
                }
        }
        return st.top();
    }
};
