/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        queue<pair<TreeNode*,int>>q;
        if(!root) return 0;
        q.push({root,1});
        int k=1;
        while(!q.empty()){
            TreeNode*ptr=q.front().first;
            int t=q.front().second;
            k=max(k,t);
            q.pop();
            if(ptr->left){
                q.push({ptr->left,t+1});
            }
            if(ptr->right){
                q.push({ptr->right,t+1});
            }
        }
        return k;
    }
};
