/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        queue<pair<TreeNode*,string>>q;
        q.push({root,to_string(root->val)});
        vector<string>ans;
        while(!q.empty()){
            TreeNode* ptr=q.front().first;
            string s=q.front().second;
            if(!ptr->left and !ptr->right){
                ans.push_back(s);
            }
            q.pop();
            if(ptr->left){
                q.push({ptr->left,s+"->"+to_string(ptr->left->val)});
            }
            if(ptr->right){
                 q.push({ptr->right,s+"->"+to_string(ptr->right->val)});
            }
        }
        return ans;
    }
};
