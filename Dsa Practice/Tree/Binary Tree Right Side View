/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };`
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>ans;
        if(!root) return ans;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            TreeNode* ptr=q.front().first;
            int k=q.front().second;
            q.pop();
            if(k<ans.size()){
                ans[k]=ptr->val;
            }else{
                if(ptr) ans.push_back(ptr->val);
            }
            if(ptr->left){
                q.push({ptr->left,k+1});
            }
            if(ptr->right){
                q.push({ptr->right,k+1});
            }
        }
        return ans;
    }
};
