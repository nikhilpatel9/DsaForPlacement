/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        int sum=0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            TreeNode* ptr=q.front().first;
            int t=q.front().second;
            q.pop();
            if(!ptr->left and !ptr->right and t==-1){
                sum+=ptr->val;
            }
            if(ptr->left){
                q.push({ptr->left,-1});
            }
            if(ptr->right){
                q.push({ptr->right,1});
            }
        }
        return sum;
    }
};
