/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int t=0;
    void inOrder(TreeNode* root,vector<int>&ans){
        if(!root) return;
        inOrder(root->left,ans);
        root->val=ans[t++];
        inOrder(root->right,ans);
    }
    void recoverTree(TreeNode* root) {
        vector<int>ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            TreeNode* ptr=q.front();
            ans.push_back(ptr->val);
            q.pop();
            if(ptr->left) q.push(ptr->left);
            if(ptr->right) q.push(ptr->right);
        }
        sort(ans.begin(),ans.end());
        inOrder(root,ans);
        //return root;
    }
};
