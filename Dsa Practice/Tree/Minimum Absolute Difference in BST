/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        queue<TreeNode*>q;
        if(!root) return 0;
        q.push(root);
        int k=INT_MAX;
        vector<int>ans;
        while(!q.empty()){
            TreeNode*ptr=q.front();
            ans.push_back(ptr->val);
            q.pop();
            if(ptr->left){
                q.push(ptr->left);
            }
            if(ptr->right){
                q.push(ptr->right);
            }
        }
        sort(ans.begin(),ans.end());
        for(int i=0;i<ans.size()-1;i++){
            k=min(k,ans[i+1]-ans[i]);
        }
        return k;
    }
};
